/* socketserver.hpp
 * author: nikobk
 * created: apr 8 2024
*/
#ifndef SOCKETSERVER_HPP
#define SOCKETSERVER_HPP

#include <cstring>
#include <netinet/in.h>
#include <sys/socket.h>
#include <unistd.h>

/**
* A struct to represent the header and payload of a message
* sent to the backend (drone manifold).
* 
* MESSAGE IDS:
* debug: 1
* init: 2
* takeoff: 3
* land: 4
* 
* TODO: Factory based message creation??
*/
struct Message {
		uint8_t id; // message id (1 byte)
		std::string msg;
};

/**
 * Create a socket listening for incoming connections on
 * a given port and address. Should ALWAYS be called from
 * the controller.
 * if debugMode is true it will send debug messages to the frontend.
*/
void startServer(int port, bool debugMode);

/**
 * Eliminate the socket and force-stop all connected clients.
*/
void stopServer();

/**
 * Receive and process a message sent from the client
 * over TCP.
 */
void handleMessage(const Message& msg);

#endif
